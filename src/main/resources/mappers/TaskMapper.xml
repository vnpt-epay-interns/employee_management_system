<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Employee_Management_System.mapper.TaskMapper">

    <update id="delete">
        UPDATE tasks t1
            INNER JOIN (
            SELECT id
            FROM tasks
            WHERE id = #{id} OR parent_id = #{id}
            ) t2 ON t1.id = t2.id
        SET t1.hidden = TRUE
    </update>



    <resultMap id="taskDetailedInfo" type="com.example.Employee_Management_System.dto.response.TaskDetailedInfo">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="completion" column="completion"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="employeeId" column="employee_id"/>
        <result property="estimateHours" column="estimate_hours"/>
        <result property="parentId" column="parent_id"/>
        <result property="priority" column="priority"/>
        <result property="managerId" column="manager_id"/>
        <result property="projectId" column="project_id"/>
        <result property="employeeId" column="employee_id"/>
        <result property="employeeName" column="employee_name"/>
        <result property="numberSubtasks" column="number_subtasks"/>
        <result property="projectName" column="project_name"/>
        <result property="employeeReview" column="employee_review"/>
        <result property="managerReview" column="manager_review"/>
    </resultMap>

    <select id="getSubTasks" resultMap="taskDetailedInfo">
        select
            t.id,
            t.title,
            t.description,
            t.start_date,
            t.end_date,
            t.status,
            t.priority,
            t.estimate_hours,
            t.parent_id,
            t.project_id,
            p.name AS project_name,
            COUNT(sub.id) AS number_subtasks,
            t.employee_id,
            CONCAT(e.first_name, ' ', e.last_name) AS employee_name,
            t.completion,
            t.employee_review,
            t.manager_review
        from tasks t
                 LEFT JOIN projects p ON t.project_id = p.id
                 LEFT JOIN users e ON t.employee_id = e.id
                 LEFT JOIN tasks sub ON sub.parent_id = t.id
        WHERE t.parent_id = #{parentId} AND t.hidden = FALSE
        GROUP BY t.id
    </select>

    <select id="getTaskById" resultMap="taskDetailedInfo">
        select
            t.id,
            t.title,
            t.description,
            t.start_date,
            t.end_date,
            t.status,
            t.priority,
            t.estimate_hours,
            t.parent_id,
            t.project_id,
            p.name AS project_name,
            COUNT(sub.id) AS number_subtasks,
            t.employee_id,
            CONCAT(e.first_name, ' ', e.last_name) AS employee_name,
            t.completion,
            t.employee_review,
            t.manager_review
        from tasks t
                 LEFT JOIN projects p ON t.project_id = p.id
                 LEFT JOIN users e ON t.employee_id = e.id
                 LEFT JOIN tasks sub ON sub.parent_id = t.id
        WHERE t.id = #{taskId} AND t.hidden = FALSE
        GROUP BY t.id
    </select>

    <select id="getTasksByEmployeeId" resultMap="taskDetailedInfo">
        select
            t.id,
            t.title,
            t.description,
            t.start_date,
            t.end_date,
            t.status,
            t.priority,
            t.estimate_hours,
            t.parent_id,
            t.project_id,
            p.name AS project_name,
            COUNT(sub.id) AS number_subtasks,
            t.employee_id,
            CONCAT(e.first_name, ' ', e.last_name) AS employee_name,
            t.completion,
            t.employee_review,
            t.manager_review
        from tasks t
                 LEFT JOIN projects p ON t.project_id = p.id
                 LEFT JOIN users e ON t.employee_id = e.id
                 LEFT JOIN tasks sub ON sub.parent_id = t.id
        WHERE t.employee_id = #{employeeId} AND t.hidden = FALSE
        GROUP BY t.id
    </select>

    <select id="getTasksByManagerId" resultMap="taskDetailedInfo">
        SELECT t.id,
               t.title,
               t.description,
               t.start_date,
               t.end_date,
               t.status,
               t.priority,
               t.estimate_hours,
               t.parent_id,
               t.project_id,
               p.name AS project_name,
               COUNT(sub.id) AS number_subtasks,
               t.employee_id,
               CONCAT(e.first_name, ' ', e.last_name) AS employee_name,
               t.completion,
               t.employee_review,
               t.manager_review
        from tasks t
                 LEFT JOIN projects p ON t.project_id = p.id
                 LEFT JOIN users e ON t.employee_id = e.id
                 LEFT JOIN tasks sub ON sub.parent_id = t.id
        WHERE t.employee_id IN (
            SELECT id
            FROM employees emp
            WHERE emp.manager_id = #{managerId}
        ) AND t.hidden = FALSE
        GROUP BY t.id
    </select>
    <resultMap id="user" type="com.example.Employee_Management_System.domain.User">
        <result property="id" column="id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="email" column="email"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="role" column="role"/>
        <result property="isLocked" column="is_locked" javaType="boolean"/>
    </resultMap>

    <select id="getManagerOfTask" resultMap="user">
        SELECT u.id         AS id,
               u.first_name AS first_name,
               u.last_name  AS last_name,
               u.email      AS email,
               u.avatar     AS avatar,
               u.password   AS password,
               u.role       AS role,
               u.is_locked  AS is_locked
        FROM users u
        WHERE u.id = (SELECT emp.manager_id
                      FROM employees emp
                      WHERE emp.id = (SELECT t.employee_id
                                      FROM tasks t
                                      WHERE t.id = #{id}))

    </select>

    <select id="getEmployeeOfTask" resultMap="user">
        SELECT u.id         AS id,
               u.first_name AS first_name,
               u.last_name  AS last_name,
               u.email      AS email,
               u.avatar     AS avatar,
               u.password   AS password,
               u.role       AS role,
               u.is_locked  AS is_locked
        FROM users u
        WHERE u.id = (SELECT t.employee_id
                      FROM tasks t
                      WHERE t.id = #{id})

    </select>

</mapper>
