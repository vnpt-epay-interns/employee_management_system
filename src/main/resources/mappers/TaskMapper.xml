<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Employee_Management_System.mapper.TaskMapper">


    <insert id="save" >
        INSERT INTO tasks (title, description, start_date, end_date, status, priority, completion, estimate_hours,
                           employee_id, parent_id, project_id)
        VALUES (#{title}, #{description}, #{startDate}, #{endDate}, #{status}, #{priority}, #{completion},
                #{estimateHours}, #{employeeId}, #{parentId}, #{projectId})
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <resultMap id="taskDetailedInfo" type="com.example.Employee_Management_System.dto.response.TaskDetailedInfo">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="completion" column="completion"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="employeeId" column="employee_id"/>
        <result property="estimateHours" column="estimate_hours"/>
        <result property="parentId" column="parent_id"/>
        <result property="priority" column="priority"/>
        <result property="managerId" column="manager_id"/>
        <result property="projectId" column="project_id"/>
        <result property="employeeId" column="employee_id"/>
        <result property="employeeName" column="employee_name"/>
        <result property="numberReports" column="number_reports"/>
        <result property="projectName" column="project_name"/>
    </resultMap>


    <select id="getTaskById" resultMap="taskDetailedInfo">
        SELECT t.id,
               t.title,
               t.description,
               t.status,
               t.completion,
               t.start_date,
               t.end_date,
               t.estimate_hours,
               t.parent_id,
               t.priority,
               t.manager_id,
               t.project_id,
               t.project_name,
               t.employee_id,
               t.employee_name,
               count(r.id) as number_reports
        FROM (SELECT t.id,
                     t.title,
                     t.description,
                     t.status,
                     t.completion,
                     t.start_date,
                     t.end_date,
                     t.estimate_hours,
                     e.manager_id                           as manager_id,
                     t.parent_id,
                     t.priority,
                     t.project_id,
                     p.name                                 as project_name,
                     t.employee_id,
                     CONCAT(u.first_name, ' ', u.last_name) AS employee_name
              FROM employees e
                       JOIN users u on u.id = e.id
                       JOIN tasks t on t.employee_id = e.id
                       join projects p on p.id = t.project_id
              WHERE t.id = #{taskId}) t
                 left join reports r on r.task_id = t.id
        group by t.id
    </select>

    <select id="getTasksByEmployeeId" resultMap="taskDetailedInfo">
        SELECT t.id,
               t.title,
               t.description,
               t.status,
               t.completion,
               t.start_date,
               t.end_date,
               t.estimate_hours,
               t.parent_id,
               t.priority,
               t.manager_id,
               t.project_id,
               t.project_name,
               t.employee_id,
               t.employee_name,
               count(r.id) as number_reports
        FROM (SELECT t.id,
                     t.title,
                     t.description,
                     t.status,
                     t.completion,
                     t.start_date,
                     t.end_date,
                     t.estimate_hours,
                     e.manager_id                           as manager_id,
                     t.parent_id,
                     t.priority,
                     t.project_id,
                     p.name                                 as project_name,
                     t.employee_id,
                     CONCAT(u.first_name, ' ', u.last_name) AS employee_name
              FROM employees e
                       JOIN users u on u.id = e.id
                       JOIN tasks t on t.employee_id = e.id
                       join projects p on p.id = t.project_id
              WHERE e.id = #{employeeId}) t
                 left join reports r on r.task_id = t.id
        group by t.id
    </select>

    <select id="getTasksByParentTaskId" resultMap="taskDetailedInfo">
        SELECT t.id,
               t.title,
               t.description,
               t.status,
               t.completion,
               t.start_date,
               t.end_date,
               t.estimate_hours,
               t.parent_id,
               t.priority,
               t.project_id,
               t.project_name,
               t.manager_id,
               t.employee_id,
               t.employee_name,
               count(r.id) as number_reports
        FROM (SELECT t.id,
                     t.title,
                     t.description,
                     t.status,
                     t.completion,
                     t.start_date,
                     t.end_date,
                     t.estimate_hours,
                     e.manager_id                           as manager_id,
                     t.parent_id,
                     t.priority,
                     t.project_id,
                     p.name                                 as project_name,
                     t.employee_id,
                     CONCAT(u.first_name, ' ', u.last_name) AS employee_name
              FROM employees e
                       JOIN users u on u.id = e.id
                       JOIN tasks t on t.employee_id = e.id
                       join projects p on p.id = t.project_id
              WHERE t.parent_id = #{parentId}) t
                 left join reports r on r.task_id = t.id
        group by t.id
    </select>

    <select id="getTasksByManagerId" resultMap="taskDetailedInfo">
        SELECT t.id,
               t.title,
               t.description,
               t.status,
               t.completion,
               t.start_date,
               t.end_date,
               t.estimate_hours,
               t.parent_id,
               t.priority,
               t.project_id,
               t.project_name,
               t.manager_id,
               t.employee_id,
               t.employee_name,
               count(r.id) as number_reports
        FROM (SELECT t.id,
                     t.title,
                     t.description,
                     t.status,
                     t.completion,
                     t.start_date,
                     t.end_date,
                     t.estimate_hours,
                     e.manager_id                           as manager_id,
                     t.parent_id,
                     t.priority,
                     t.project_id,
                     p.name                                 as project_name,
                     t.employee_id,
                     CONCAT(u.first_name, ' ', u.last_name) AS employee_name
              FROM employees e
                       JOIN users u on u.id = e.id
                       JOIN tasks t on t.employee_id = e.id
                       join projects p on p.id = t.project_id
              WHERE e.manager_id = #{managerId}) t
                 left join reports r on r.task_id = t.id
        group by t.id
    </select>
    <resultMap id="user" type="com.example.Employee_Management_System.domain.User">
        <result property="id" column="id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="email" column="email"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="role" column="role"/>
        <result property="isLocked" column="is_locked" javaType="boolean"/>
    </resultMap>

    <select id="getManagerOfTask" resultMap="user">
        SELECT u.id         AS id,
               u.first_name AS first_name,
               u.last_name  AS last_name,
               u.email      AS email,
               u.avatar     AS avatar,
               u.password   AS password,
               u.role       AS role,
               u.is_locked  AS is_locked
        FROM users u
        WHERE u.id = (SELECT emp.manager_id
                      FROM employees emp
                      WHERE emp.id = (SELECT t.employee_id
                                      FROM tasks t
                                      WHERE t.id = #{id}))

    </select>

    <select id="getEmployeeOfTask" resultMap="user">
        SELECT u.id         AS id,
               u.first_name AS first_name,
               u.last_name  AS last_name,
               u.email      AS email,
               u.avatar     AS avatar,
               u.password   AS password,
               u.role       AS role,
               u.is_locked  AS is_locked
        FROM users u
        WHERE u.id = (SELECT t.employee_id
                      FROM tasks t
                      WHERE t.id = #{id})

    </select>


</mapper>
